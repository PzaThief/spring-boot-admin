name: build feature branches

on:
  push:
    branches-ignore:
      - master
      - 1.*
      - 2.*
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:

      - name: free disk space
        run: |
          df -h
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h

      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      # since we also build on Windows Powershell, we need to add a space between -D maven.javadoc.skip=true
      # otherwise the build will fail https://stackoverflow.com/questions/38051787/maven-javadoc-skip-true-throws-an-error
      - name: Build with Maven
        run: |
          mvn -B verify -P coverage --no-transfer-progress -D maven.javadoc.skip=true

      - uses: codecov/codecov-action@v4
        with:
          files: "'*/jacoco.xml'"

      - name: Extract Maven project version for Asciidoc GitHub Pages directory naming
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project

      - name: Show extracted Maven project version
        run: echo ${{ steps.project.outputs.version }}

      - name: Deploy Asciidoc docs output to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: spring-boot-admin-docs/target/generated-docs # The folder the action should deploy.
          target-folder: ${{ steps.project.outputs.version }}
          clean: true # Automatically remove deleted files from the deploy branch

